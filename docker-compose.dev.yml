version: '3.9'
services:
    postgresql:
        stop_grace_period: 3s
        restart: unless-stopped
        env_file: .env
        environment:
            POSTGRES_PASSWORD: ${PSQL_PASSWORD}
            POSTGRES_DB: ${PSQL_DATABASE}
            PGDATA: /var/lib/postgresql/data/pgdata
        image: postgres:12
        healthcheck:
            test: [ 'CMD', 'pg_isready', '-U', 'postgres' ]
        volumes:
            - postgresql:/var/lib/postgresql/data/pgdata
        networks:
            - backend
        expose:
            - 5432
    backend:
        command: bash -c 'yarn install && yarn run start:dev'
        stop_grace_period: 3s
        depends_on:
            - postgresql
        restart: unless-stopped
        env_file: .env
        build:
            context: .
            target: backend
        healthcheck:
            test: [ 'CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/api/ping || exit 1' ]
        volumes:
            - ./NJMPU-API:/app
            - shared:/app/${IMG_PATH}
        networks:
            - backend
            - frontend
        expose:
            - 3000
    frontend:
        command: bash -c 'yarn install && yarn run dev --host'
        stop_grace_period: 3s
        depends_on:
            - backend
        restart: unless-stopped
        build:
            context: .
            target: frontend
        volumes:
            - ./NJMPU-FRONT:/app
        networks:
            - backend
            - frontend
        expose:
            - 5000
    nginx:
        command: bash -c 'bash /nginx.sh && nginx -g "daemon off;"'
        stop_grace_period: 3s
        depends_on:
            - frontend
        restart: unless-stopped
        env_file: .env
        build:
            context: .
            target: frontend
        volumes:
            - shared:/app/pictures:r
            - ./Docker/nginx/nginx.sh:/nginx.sh:r
            - ./Docker/nginx/nginx.conf:/etc/nginx/nginx.conf.template:r
            - ./Docker/nginx/app.dev.conf:/etc/nginx/sites-enabled/default:r
            - ./Docker/nginx/log:/var/log/nginx
        networks:
            - backend
            - frontend
        expose:
            - 443
        ports:
            - 443:443

networks:
    backend:
        internal: true
    frontend:


volumes:
    postgresql:
    shared:
